{
	"name": "df_fact_stays",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "bd_aemf1_csv",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dim_fact_stays",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          City as string,",
				"          Price as decimal(10,2),",
				"          Day as string,",
				"          {Room Type} as string,",
				"          {Shared Room} as string,",
				"          {Private Room} as string,",
				"          {Person Capacity} as decimal(10,2),",
				"          Superhost as string,",
				"          {Multiple Rooms} as string,",
				"          Business as string,",
				"          {Cleanliness Rating} as decimal(10,2),",
				"          {Guest Satisfaction} as decimal(10,2),",
				"          Bedrooms as string,",
				"          {City Center (km)} as decimal(10,2),",
				"          {Metro Distance (km)} as decimal(10,2),",
				"          {Attraction Index} as decimal(10,2),",
				"          {Normalised Attraction Index} as string,",
				"          {Restraunt Index} as decimal(10,2),",
				"          {Normalised Restraunt Index} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          City,",
				"          Price,",
				"          Day,",
				"          {Room Type},",
				"          {Shared Room},",
				"          {Private Room},",
				"          {Person Capacity},",
				"          {Cleanliness Rating},",
				"          {Guest Satisfaction},",
				"          Bedrooms,",
				"          {City Center (km)},",
				"          {Metro Distance (km)},",
				"          {Attraction Index},",
				"          {Restraunt Index}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_facts as integer,",
				"          City as string,",
				"          Price as decimal(9,2),",
				"          Day as string,",
				"          Room_Type as string,",
				"          Shared_room as string,",
				"          Private_room as string,",
				"          Bedrooms as integer,",
				"          Person_Capacity as decimal(9,2),",
				"          Cleanliness_Rating as decimal(9,2),",
				"          Guest_Satisfaction as decimal(9,2),",
				"          City_Center as decimal(9,2),",
				"          Metro_Distance as decimal(9,2),",
				"          Attraction_Index as decimal(9,2),",
				"          Restraunt_Index as decimal(9,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'allErrors',",
				"     transactionCommit: 'single',",
				"     reportSuccessOnError: false,",
				"     mapColumn(",
				"          City,",
				"          Price,",
				"          Day,",
				"          Room_Type = {Room Type},",
				"          Shared_room = {Shared Room},",
				"          Private_room = {Private Room},",
				"          Bedrooms,",
				"          Person_Capacity = {Person Capacity},",
				"          Cleanliness_Rating = {Cleanliness Rating},",
				"          Guest_Satisfaction = {Guest Satisfaction},",
				"          City_Center = {City Center (km)},",
				"          Metro_Distance = {Metro Distance (km)},",
				"          Attraction_Index = {Attraction Index},",
				"          Restraunt_Index = {Restraunt Index}",
				"     )) ~> sink1"
			]
		}
	}
}